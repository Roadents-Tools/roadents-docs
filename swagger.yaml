openapi: 3.0.0
info:
  version: 0.1.0
  title: Reroute API
  description: >
    The API to use Reroute's set of time-based navigation services.


    Note that the API is currently in Beta, and as such only the
    Generator algorithm is available for use.
  contact:
    name: Reroute API Team
    url: www.rerouteapi.net

servers:
  - url: 'http://www.rerouteapi.com/api/v0'
security:
  - ApiKeyAuth : []
paths:
  /generator:
    get:
      summary: Runs the Generator route-finding algorithm.
      description: >
        Finds all routes meeting a given query thatcan be reached in a certain
        time from a given starting point. The routes can be filtered and
        limited in a variety of ways.
      operationId: Generator
      tags:
        - API Methods
      parameters:
        - name: latitude
          in: query
          description: The latitude of the starting location.
          required: true
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          description: The longitude of the starting location.
          required: true
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
        - name: query
          in: query
          description: The keyword to use to search for destinations.
          required: true
          schema:
            type: string
        - name: total_time
          in: query
          description: The maximum seconds any route can take.
          required: true
          schema:
            type: integer
            format: int64
            minimum: 60
            maximum: 10800
        - name: departure_time
          in: query
          description: The time to start at, in seconds since midnight, Jan 1, 1970 GMT. Can also pass -1 to use the current time.
          required: false
          schema:
            type: integer
            format: int64
            minimum: -1
            default: -1
        - name: max_walk_time
          in: query
          description: The maximum amount of seconds spent walking over the course of a route.
          required: false
          schema:
            type: integer
            format: int64
        - name: max_step_walk_time
          in: query
          description: The maximum amount of seconds spent walking between any 2 points.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 60
            maximum: 900
            default: 300
        - name: max_wait_time
          in: query
          description: The maximum seconds spent waiting for transit over the course of a route.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 60
        - name: max_step_wait_time
          in: query
          description: The maximum seconds spent waiting for transit between any 2 points.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 60
        - name: min_step_wait_time
          in: query
          description: The minimum seconds spent waiting for transit when taking transit.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 30
            default: 60
        - name: min_dist
          in: query
          description: The minimum distance, in meters, that a route's destination is from the start location.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 10
        - name: steps
          in: query
          description: The maximum number of steps over the course of the route.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
            default: 5
        - name: limit
          in: query
          description: The maximum number of routes to return.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 100
            default: 50
      responses:
        '200':
          description: The list of routes meeting the passed filters.
          content:
            application/json:
              schema:
                type: array
                description: The routes meeting the query.
                items:
                  $ref: '#/components/schemas/Route'
        'default':
          description: unexpected error
          content:
            application/json:
              schema:
                type: object
                description: An HTTP error.
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                    description: The HTTP status code.
                  message:
                    type: string
                    description: The text of the error.
components:
  securitySchemes:
    ApiKeyAuth:
      description: "The API key to use for usage tracking."
      type: "apiKey"
      name: "x-api-key"
      in: "header"
  schemas:
    Route:
      type: object
      description: A series of steps leading from one location to another.
      required:
        - start_pt
        - end_pt
        - start_time
        - total_time
        - steps
      properties:
        start_pt:
          description: The location the route starts at.
          allOf:
            - $ref: '#/components/schemas/Start'
        end_pt:
          description: The location the route ends at.
          allOf:
            - $ref: '#/components/schemas/Destination'
        start_time:
          type: integer
          format: int64
          description: The time the route begins, in seconds since midnight Jan 1, 1970, GMT.
        total_time:
          type: integer
          format: int64
          description: The number of seconds the route takes.
        steps:
          type: array
          description: The list of steps to get from start_pt to end_pt.
          items:
            $ref: '#/components/schemas/RouteStep'
    RouteStep:
      description: A singe step in a route.
      type: object
      required:
        - step_type
        - total_time
        - start_pt
        - end_pt
      discriminator:
        propertyName: step_type
        mapping:
          transit: '#/components/schemas/TransitStep'
          walk_start: '#/components/schemas/StartWalkStep'
          walk_dest: '#/components/schemas/DestinationWalkStep'
          walk_transfer: '#/components/schemas/TransferWalkStep'
          walk_full_route: '#/components/schemas/FullRouteWalkStep'
      properties:
        total_time:
          type: integer
          format: int64
          description: Time in seconds spend in this step.
        step_type:
          description: The type of step this is.
          type: string
          enum:
            - transit
            - walk_start
            - walk_dest
            - walk_transfer
            - walk_full_route
        start_pt:
          description: The place that this step starts at.
          allOf:
            - $ref: "#/components/schemas/Location"
        end_pt:
          description: The place that this step ends at.
          allOf:
            - $ref: "#/components/schemas/Location"
    StartWalkStep:
      description: A step representing walking away from the Start location.
      allOf:
        - $ref: '#/components/schemas/RouteStep'
        - type: object
          required:
            - start_pt
            - end_pt
            - walk_distance
            - step_type
          properties:
            start_pt:
              description: The inputted location of the route.
              allOf:
                - $ref: '#/components/schemas/Start'
            end_pt:
              description: The station to walk to.
              allOf:
                - $ref: '#/components/schemas/Station'
            walk_distance:
              description: The distance walked in this step.
              type: integer
              format: int32
            step_type:
              type: string
              enum:
                - walk_start
    TransferWalkStep:
      description: A step representing walking from one station to another.
      allOf:
        - $ref: '#/components/schemas/RouteStep'
        - type: object
          required:
            - start_pt
            - end_pt
            - walk_distance
            - step_type
          properties:
            start_pt:
              description: The station we are transfering from.
              allOf:
                - $ref: '#/components/schemas/Station'
            end_pt:
              description: The station we are transfering to.
              allOf:
                - $ref: '#/components/schemas/Station'
            walk_distance:
              description: The distance walked in this step.
              type: integer
              format: int32
            step_type:
              type: string
              enum:
                - walk_transfer
    DestinationWalkStep:
      description: A step representing walking from a station to a destination.
      allOf:
        - $ref: '#/components/schemas/RouteStep'
        - type: object
          required:
            - start_pt
            - end_pt
            - walk_distance
            - step_type
          properties:
            start_pt:
              description: The station we are starting at.
              allOf:
                - $ref: '#/components/schemas/Station'
            end_pt:
              description: The destination we walk to.
              allOf:
                - $ref: '#/components/schemas/Destination'
            walk_distance:
              description: The distance we walk between the final station and the destination.
              type: integer
              format: int32
            step_type:
              type: string
              enum:
                - walk_dest
    FullRouteWalkStep:
      description: A step representing walking from the start location to a destination without stopping.
      allOf:
        - $ref: '#/components/schemas/RouteStep'
        - type: object
          required:
            - start_pt
            - end_pt
            - walk_distance
            - step_type
          properties:
            start_pt:
              description: The inputted start location.
              allOf:
                - $ref: '#/components/schemas/Start'
            end_pt:
              description: The final destination.
              allOf:
                - $ref: '#/components/schemas/Destination'
            walk_distance:
              description: The distance we walk between the start location and the final destination.
              type: integer
              format: int32
            step_type:
              type: string
              enum:
                - walk_full_route
    TransitStep:
      description: A step representing using a form of public transit.
      allOf:
        - $ref: '#/components/schemas/RouteStep'
        - type: object
          required:
            - start_pt
            - end_pt
            - wait_time
            - travel_time
            - agency
            - route
            - stops
            - transit_type
            - step_type
          properties:
            start_pt:
              description: The station we begin the step at.
              allOf:
                - $ref: '#/components/schemas/Station'
            end_pt:
              description: The station we end the step at.
              allOf:
                - $ref: '#/components/schemas/Station'
            wait_time:
              description: The number of seconds waiting at start_pt for the transit method to arrive.
              type: integer
              format: int32
            travel_time:
              description: The number of seconds spent travelling in the public transit method.
              type: integer
              format: int32
            agency:
              description: The name of the agency that is used to travel in this step.
              type: string
            route:
              description: The name of the route taken in this step.
              type: string
            stops:
              description: The number of stops travelled in this step.
              type: integer
              format: int32
            transit_type:
              description: The type of transit used in this step.
              type: string
              enum:
                - bus
                - train
                - ferry
                - misc
            step_type:
              type: string
              enum:
                - transit
    Location:
      description: A point on the planet earth.
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: The latitude of the location.
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          description: The longitude of the location.
    Start:
      description: The location passed in to the method.
      allOf:
        - $ref: "#/components/schemas/Location"
        - type: object
    Station:
      description: A public transit station.
      allOf:
        - $ref: "#/components/schemas/Location"
        - type: object
          required:
            - name
          properties:
            name:
              type: string
              description: The name of the station, like "23rd and 2nd".
    Destination:
      description: A non-station location that meets a method's query parameters.
      allOf:
        - $ref: "#/components/schemas/Location"
        - type: object
          required:
            - name
            - categories
          properties:
            name:
              type: string
              description: The name of this location.
            categories:
              type: array
              description: A list of keyword-style categories that apply to this location, like "Park".
              items:
                type: string
